apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
{{ include "app.labels.common" $ | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "app.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "app.fullname" . }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | trim | nindent 8 }}
      {{- else if .Values.global.nodeSelector }}
      nodeSelector:
        {{- .Values.global.nodeSelector | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- .Values.tolerations | toYaml | trim | nindent 8 }}
      {{- else if .Values.global.tolerations }}
      tolerations:
        {{- .Values.global.tolerations | toYaml | trim | nindent 8 }}
      {{- end }}       
      containers:
      - name: {{ include "app.fullname" . }}
        image: {{ .Values.app.image.registry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:   
          - name: ADMINER_DESIGN
            value: {{ .Values.theme }}
      {{- if .Values.db.server }}            
          - name: ADMINER_DEFAULT_SERVER
            value: {{ .Values.db.server }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30   
